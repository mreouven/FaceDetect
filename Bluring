#https://www.mygreatlearning.com/blog/real-time-face-detection/#sh1
#https://medium.com/@bipinadvani/face-recognition-and-blurring-in-webcam-using-cv2-python-5c4c589e6e59
#https://pythonprogramming.net/haar-cascade-face-eye-detection-python-opencv-tutorial/
#https://github.com/kurttepelikerim/FaceDetectionAnonymization/blob/master/FaceDetection.py

import cv2
import numpy as np
import os
cascPath = os.path.dirname( cv2.__file__) + "/data/haarcascade_frontalface_alt2.xml"
cascPath_eye = os.path.dirname( cv2.__file__) + "/data/haarcascade_eye.xml"
#to load our classifier
faceCascade = cv2.CascadeClassifier(cascPath)
eye_cascade = cv2.CascadeClassifier(cascPath_eye)
cap = cv2.VideoCapture(0)

blur = False
framed = False
framed_eyes = False
blur_eyes = False

while True:
    ret,frame = cap.read()
    if(ret):
        gray = cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
        f = faceCascade.detectMultiScale(gray, scaleFactor=1.1,minNeighbors=7)

        for x,y,w,h in f:
            roi_gray = gray[y:y+h, x:x+w]
            roi_color = frame[y:y+h, x:x+w]
            eyes = eye_cascade.detectMultiScale(roi_gray, scaleFactor=1.35,minNeighbors=6)
            
            if blur:
                # apply a gaussian blur on this new recangle image
                roi_color = cv2.GaussianBlur(roi_color,(23, 23), 30)
                # merge this blurry rectangle to our final image
                frame[y:y+roi_color.shape[0], x:x+roi_color.shape[1]] = roi_color
                
            if framed:
                cv2.rectangle(frame,(x,y),(x+h,y+w),(0,255,0),2)
                
            if framed_eyes:
                for (ex,ey,ew,eh) in eyes:
                    cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(0,255,0),2)
            
            
        cv2.imshow('Face Recognized',frame)
    ch = 0xFF &cv2.waitKey(1)
    
    if ch == ord("b"):
        blur = not blur
                
    if ch == ord("e"):
        framed_eyes = not framed_eyes

    if ch == ord("f"):
        framed = not framed

    if ch ==ord("q"):
        break

cap.release()
cv2.destroyAllWindows()
